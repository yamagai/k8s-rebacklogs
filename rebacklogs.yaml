apiVersion: v1
kind: Service
metadata:
  labels:
    app: rebacklogs
  name: rebacklogs
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 3000
  selector:
    app: rebacklogs
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rebacklogs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rebacklogs
  template:
    metadata:
      labels:
        app: rebacklogs
    spec:
      containers:
      - name: rebacklogs
        image: kaishuu0123/rebacklogs:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c", "rm -f /opt/rebacklogs/tmp/pids/server.pid; bundle exec rails db:prepare; bundle exec rails s -p 3000"]
        env:
        - name: DB_HOST
          value: postgres
        - name: DB_USER
          value: postgres
        - name: DB_NAME
          value: rebacklogs
        - name: DB_PORT
          value: "5432"
        - name: DB_PASS
          value: password
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 5
        livenessProbe:
          exec: 
            command: ["/bin/sh", "-c", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
          initialDelaySeconds: 60
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - mountPath: /rebacklogs/storage
          name: rebacklogs
      volumes:
      - name: rebacklogs
        persistentVolumeClaim:
          claimName: rebacklogs
